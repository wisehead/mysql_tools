1.tpcc_common.lua
 MAXITEMS=100000
 DIST_PER_WARE=10
 CUST_PER_DIST=3000

cmd_prepare
--create_tables
----create warehouse%d
----create district%d
----create customer%d
----create history%d
----create orders%d
----create new_orders%d
----create stock%d
----create item%d
------bulk_insert_init("INSERT INTO item"
----create indexes
----create foreign key constraint
--load_tables
----bulk_insert_init("INSERT INTO warehouse"
----bulk_insert_init("INSERT INTO district"
----bulk_insert_init("INSERT INTO customer"
----bulk_insert_init("INSERT INTO history"
----bulk_insert_init("INSERT INTO orders"
----bulk_insert_init("INSERT INTO stock"
----query(string.format("INSERT INTO new_orders%d
----bulk_insert_init("INSERT INTO order_line"


cmd_check
--check_tables

cleanup
--con:query("DROP TABLE IF EXISTS history" .. i )
--con:query("DROP TABLE IF EXISTS new_orders" .. i )
--con:query("DROP TABLE IF EXISTS order_line" .. i )
--con:query("DROP TABLE IF EXISTS orders" .. i )
--con:query("DROP TABLE IF EXISTS customer" .. i )
--con:query("DROP TABLE IF EXISTS district" .. i )
--con:query("DROP TABLE IF EXISTS stock" .. i )
--con:query("DROP TABLE IF EXISTS item" .. i )
--con:query("DROP TABLE IF EXISTS warehouse" .. i )
 
2.tpcc.lua
//主测试流程，随机调用各个函数，完成不同的业务场景。
function event()
  -- print( NURand (1023,1,3000))
  local max_trx =  sysbench.opt.enable_purge == "yes" and 24 or 23
  local trx_type = sysbench.rand.uniform(1,max_trx)
  if trx_type <= 10 then
    trx="new_order"
  elseif trx_type <= 20 then
    trx="payment"
  elseif trx_type <= 21 then
    trx="orderstatus"
  elseif trx_type <= 22 then
    trx="delivery"
  elseif trx_type <= 23 then
    trx="stocklevel"
  elseif trx_type <= 24 then
    trx="purge"
  end

-- Execute transaction
   _G[trx]()

end


3.tpcc_check.lua

check_tables
--pass1
--con:query("SELECT d_w_id,sum(d_ytd)-max(w_ytd) diff FROM district"..table_num..",warehouse"..table_num.." WHERE d_w_id=w_id AND w_id="..warehouse_num.." group by d_w_id")
--pass2
--con:query(string.format("SELECT dis.d_id, d_next_o_id-1,mo,mno FROM district%d dis, (SELECT o_d_id,max(o_id) mo FROM orders%d WHERE o_w_id=%d GROUP BY o_d_id) q, (select no_d_id,max(no_o_id) mno from new_orders%d where no_w_id=%d group by no_d_i    d) no where d_w_id=%d and q.o_d_id=dis.d_id and no.no_d_id=dis.d_id", table_num,table_num,warehouse_num, table_num, warehouse_num, warehouse_num))
--pass3
--con:query(string.format("select no_d_id,max(no_o_id)-min(no_o_id)+1,count(*) from new_orders%d where no_w_id=%d group by no_d_id",table_num, warehouse_num))
--pass4
--con:query(string.format([[SELECT count(*)
                                         FROM (SELECT o_d_id, SUM(o_ol_cnt) sm1, MAX(cn) as cn
                                                 FROM orders%d,(SELECT ol_d_id, COUNT(*) cn
                                                                  FROM order_line%d
                                                                 WHERE ol_w_id=%d GROUP BY ol_d_id) ol
                                                WHERE o_w_id=%d AND ol_d_id=o_d_id GROUP BY o_d_id) t1
                                         WHERE sm1<>cn]],table_num, table_num, warehouse_num, warehouse_num))
--pass5
--con:query(string.format("SELECT count(*) FROM orders%d LEFT JOIN new_orders%d ON (no_w_id=o_w_id AND o_d_id=no_d_id AND o_id=no_o_id) where o_w_id=%d and ((o_carrier_id IS NULL and no_o_id IS  NULL) OR (o_carrier_id IS NOT NULL and no_o_id IS NO    T NULL  )) ",table_num, table_num, warehouse_num))
--pass6
--pass7
--con:query(string.format("SELECT count(*) FROM orders%d, order_line%d WHERE o_id=ol_o_id AND o_d_id=ol_d_id AND ol_w_id=o_w_id AND o_w_id=%d AND ((ol_delivery_d IS NULL and o_carrier_id IS NOT NULL) or (o_carrier_id IS NULL and ol_delivery_d IS N    OT NULL ))",table_num, table_num, warehouse_num))
--pass8
--con:query(string.format("SELECT count(*) cn FROM (SELECT w_id,w_ytd,SUM(h_amount) sm FROM history%d,warehouse%d WHERE h_w_id=w_id and w_id=%d GROUP BY w_id) t1 WHERE w_ytd<>sm",table_num, table_num, warehouse_num))
--pass9
--con:query(string.format("SELECT COUNT(*) FROM (select d_id,d_w_id,sum(d_ytd) s1 from district%d group by d_id,d_w_id) d,(select h_d_id,h_w_id,sum(h_amount) s2 from history%d WHERE  h_w_id=%d group by h_d_id, h_w_id) h WHERE h_d_id=d_id AND d_w_i    d=h_w_id and d_w_id=%d and s1<>s2",table_num, table_num, warehouse_num, warehouse_num))
--pass10
--con:query(string.format([[SELECT count(*)
                                          FROM (  SELECT  c.c_id, c.c_d_id, c.c_w_id, c.c_balance c1,
                                                         (SELECT sum(ol_amount) FROM orders%d ]] .. straight_join_hint .. [[ order_line%d
                                                           WHERE OL_W_ID=O_W_ID
                                                             AND OL_D_ID = O_D_ID
                                                             AND OL_O_ID = O_ID
                                                             AND OL_DELIVERY_D IS NOT NULL
                                                             AND O_W_ID=c.c_w_id
                                                             AND O_D_ID=c.C_D_ID
                                                             AND O_C_ID=c.C_ID) sm, (SELECT  sum(h_amount)  from  history%d
                                                                                      WHERE H_C_W_ID=c.C_W_ID
                                                                                        AND H_C_D_ID=c.C_D_ID
                                                                                        AND H_C_ID=c.C_ID) smh
                                                   FROM customer%d c
                                                  WHERE  c.c_w_id=%d ) t
                                         WHERE c1<>sm-smh]],table_num, table_num, table_num, table_num, warehouse_num))
--pass12
--con:query(string.format([[SELECT count(*) FROM (SELECT  c.c_id, c.c_d_id, c.c_balance c1, c_ytd_payment,
                                         (SELECT sum(ol_amount) FROM orders%d ]] .. straight_join_hint .. [[ order_line%d
                                         WHERE OL_W_ID=O_W_ID AND OL_D_ID = O_D_ID AND OL_O_ID = O_ID AND OL_DELIVERY_D IS NOT NULL AND
                                         O_W_ID=c.c_w_id AND O_D_ID=c.C_D_ID AND O_C_ID=c.C_ID) sm FROM customer%d c WHERE  c.c_w_id=%d) t1
                                         WHERE c1+c_ytd_payment <> sm ]] ,table_num, table_num, table_num, warehouse_num))








                                                                                 
                                         




